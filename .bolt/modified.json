[["/home/project/pages/multistep.vue","<template>\n  <div>\n    <h2 class=\"text-2xl font-semibold mb-4\">Multistep Job Application Form</h2>\n    <div class=\"mb-4\">\n      <div class=\"flex justify-between\">\n        <div v-for=\"(step, index) in steps\" :key=\"index\" class=\"flex items-center\">\n          <div :class=\"[\n            'rounded-full h-8 w-8 flex items-center justify-center',\n            currentStep > index ? 'bg-green-500 text-white' : currentStep === index ? 'bg-blue-500 text-white' : 'bg-gray-300'\n          ]\">\n            {{ index + 1 }}\n          </div>\n          <div v-if=\"index < steps.length - 1\" class=\"h-1 w-10 bg-gray-300 mx-2\"></div>\n        </div>\n      </div>\n    </div>\n    <Form @submit=\"submitStep\" :validation-schema=\"currentSchema\" v-slot=\"{ errors }\">\n      <div v-if=\"currentStep === 0\">\n        <h3 class=\"text-xl font-semibold mb-2\">Personal Information</h3>\n        <div class=\"mb-4\">\n          <label for=\"fullName\" class=\"block text-sm font-medium text-gray-700\">Full Name</label>\n          <Field name=\"fullName\" type=\"text\" class=\"form-input\" :class=\"{ 'border-red-500': errors.fullName }\" />\n          <ErrorMessage name=\"fullName\" class=\"error\" />\n        </div>\n        <div class=\"mb-4\">\n          <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email</label>\n          <Field name=\"email\" type=\"email\" class=\"form-input\" :class=\"{ 'border-red-500': errors.email }\" />\n          <ErrorMessage name=\"email\" class=\"error\" />\n        </div>\n      </div>\n      <div v-else-if=\"currentStep === 1\">\n        <h3 class=\"text-xl font-semibold mb-2\">Education</h3>\n        <div class=\"mb-4\">\n          <label for=\"degree\" class=\"block text-sm font-medium text-gray-700\">Highest Degree</label>\n          <Field name=\"degree\" as=\"select\" class=\"form-input\" :class=\"{ 'border-red-500': errors.degree }\">\n            <option value=\"\">Select a degree</option>\n            <option value=\"high_school\">High School</option>\n            <option value=\"bachelors\">Bachelor's</option>\n            <option value=\"masters\">Master's</option>\n            <option value=\"phd\">Ph.D.</option>\n          </Field>\n          <ErrorMessage name=\"degree\" class=\"error\" />\n        </div>\n        <div class=\"mb-4\">\n          <label for=\"graduationYear\" class=\"block text-sm font-medium text-gray-700\">Graduation Year</label>\n          <Field name=\"graduationYear\" type=\"number\" class=\"form-input\" :class=\"{ 'border-red-500': errors.graduationYear }\" />\n          <ErrorMessage name=\"graduationYear\" class=\"error\" />\n        </div>\n      </div>\n      <div v-else>\n        <h3 class=\"text-xl font-semibold mb-2\">Work Experience</h3>\n        <div class=\"mb-4\">\n          <label for=\"yearsOfExperience\" class=\"block text-sm font-medium text-gray-700\">Years of Experience</label>\n          <Field name=\"yearsOfExperience\" type=\"number\" class=\"form-input\" :class=\"{ 'border-red-500': errors.yearsOfExperience }\" />\n          <ErrorMessage name=\"yearsOfExperience\" class=\"error\" />\n        </div>\n        <div class=\"mb-4\">\n          <label for=\"currentPosition\" class=\"block text-sm font-medium text-gray-700\">Current Position</label>\n          <Field name=\"currentPosition\" type=\"text\" class=\"form-input\" :class=\"{ 'border-red-500': errors.currentPosition }\" />\n          <ErrorMessage name=\"currentPosition\" class=\"error\" />\n        </div>\n      </div>\n      <div class=\"flex justify-between mt-4\">\n        <button v-if=\"currentStep > 0\" @click=\"prevStep\" type=\"button\" class=\"btn bg-gray-500 hover:bg-gray-600\">Previous</button>\n        <button v-if=\"currentStep < steps.length - 1\" type=\"submit\" class=\"btn\">Next</button>\n        <button v-else type=\"submit\" class=\"btn bg-green-500 hover:bg-green-600\">Submit Application</button>\n      </div>\n    </Form>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport { Form, Field, ErrorMessage } from 'vee-validate';\nimport { toTypedSchema } from '@vee-validate/zod';\nimport * as zod from 'zod';\n\nconst steps = ['Personal Information', 'Education', 'Work Experience'];\nconst currentStep = ref(0);\n\nconst personalInfoSchema = toTypedSchema(zod.object({\n  fullName: zod.string().min(2, 'Full name must be at least 2 characters'),\n  email: zod.string().email('Invalid email address'),\n}));\n\nconst educationSchema = toTypedSchema(zod.object({\n  degree: zod.string().min(1, 'Please select a degree'),\n  graduationYear: zod.number().min(1900, 'Invalid year').max(new Date().getFullYear(), 'Year cannot be in the future'),\n}));\n\nconst workExperienceSchema = toTypedSchema(zod.object({\n  yearsOfExperience: zod.number().min(0, 'Years of experience cannot be negative'),\n  currentPosition: zod.string().min(2, 'Current position must be at least 2 characters'),\n}));\n\nconst schemas = [personalInfoSchema, educationSchema, workExperienceSchema];\n\nconst currentSchema = computed(() => schemas[currentStep.value]);\n\nconst formData = ref({});\n\nconst submitStep = (values) => {\n  formData.value = { ...formData.value, ...values };\n  if (currentStep.value < steps.length - 1) {\n    currentStep.value++;\n  } else {\n    console.log('Form submitted:', formData.value);\n    alert('Application submitted successfully!');\n    // Here you would typically send the data to your backend\n  }\n};\n\nconst prevStep = () => {\n  if (currentStep.value > 0) {\n    currentStep.value--;\n  }\n};\n</script>"]]